openapi: 3.0.3
info:
  title: Docuhealth API
  version: 1.0.0
  description: Docuhealth API Documentation
paths:
  /api/auth/forgot-password:
    post:
      operationId: api_auth_forgot_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPassword'
          description: ''
  /api/auth/forgot-password/verify-otp:
    post:
      operationId: api_auth_forgot_password_verify_otp_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOTP'
          description: ''
  /api/auth/login:
    post:
      operationId: api_auth_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /api/auth/medical-records:
    get:
      operationId: api_auth_medical_records_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicalRecord'
          description: ''
  /api/auth/refresh:
    post:
      operationId: api_auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/reset-password:
    patch:
      operationId: api_auth_reset_password_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResetPassword'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /api/auth/signup:
    post:
      operationId: api_auth_signup_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUser'
          description: ''
  /api/auth/signup/verify-otp:
    post:
      operationId: api_auth_signup_verify_otp_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOTP'
          description: ''
  /api/auth/users:
    get:
      operationId: api_auth_users_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateUser'
          description: ''
components:
  schemas:
    CreateUser:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        role:
          $ref: '#/components/schemas/RoleEnum'
        hin:
          type: string
          readOnly: true
        street:
          type: string
          maxLength: 120
        city:
          type: string
          maxLength: 20
        state:
          type: string
          maxLength: 20
        country:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        profile:
          $ref: '#/components/schemas/PatientProfile'
        password:
          type: string
          writeOnly: true
          minLength: 8
        house_no:
          type: string
          writeOnly: true
          maxLength: 10
      required:
      - city
      - country
      - created_at
      - email
      - hin
      - password
      - profile
      - state
      - street
      - updated_at
    CustomTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    DrugRecord:
      type: object
      description: This serializer allows to serialize and deserialize structured
        data.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        route:
          type: string
          maxLength: 255
        quantity:
          type: number
          format: double
        frequency: {}
        duration: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        medical_record:
          type: integer
      required:
      - created_at
      - duration
      - frequency
      - id
      - medical_record
      - name
      - quantity
      - route
      - updated_at
    ForgotPassword:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    GenderEnum:
      enum:
      - male
      - female
      - other
      - unknown
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
        * `other` - Other
        * `unknown` - Unknown
    MedicalRecord:
      type: object
      description: This serializer allows to serialize and deserialize structured
        data.
      properties:
        id:
          type: integer
          readOnly: true
        patient:
          type: string
          writeOnly: true
        patient_hin:
          type: string
          readOnly: true
        referred_docuhealth_hosp:
          type: string
          writeOnly: true
          nullable: true
        referred_docuhealth_hosp_hin:
          type: string
          readOnly: true
        drug_records:
          type: array
          items:
            $ref: '#/components/schemas/DrugRecord'
        history:
          type: array
          items:
            type: string
        physical_exam:
          type: array
          items:
            type: string
        diagnosis:
          type: array
          items:
            type: string
        treatment_plan:
          type: array
          items:
            type: string
        care_instructions:
          type: array
          items:
            type: string
        chief_complaint:
          type: string
        vital_signs: {}
        appointment: {}
        referred_hosp:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        hospital:
          type: integer
          readOnly: true
      required:
      - appointment
      - chief_complaint
      - created_at
      - drug_records
      - hospital
      - id
      - patient
      - patient_hin
      - referred_docuhealth_hosp_hin
      - updated_at
      - vital_signs
    PatchedResetPassword:
      type: object
      properties:
        new_password:
          type: string
          writeOnly: true
          minLength: 8
    PatientProfile:
      type: object
      properties:
        dob:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone_num:
          type: string
        firstname:
          type: string
          maxLength: 100
        lastname:
          type: string
          maxLength: 100
        middlename:
          type: string
          maxLength: 100
        referred_by:
          type: string
          maxLength: 50
      required:
      - dob
      - firstname
      - gender
      - lastname
    ResetPassword:
      type: object
      properties:
        new_password:
          type: string
          writeOnly: true
          minLength: 8
      required:
      - new_password
    RoleEnum:
      enum:
      - patient
      - hospital
      - admin
      - pharmacy
      type: string
      description: |-
        * `patient` - Patient
        * `hospital` - Hospital
        * `admin` - Admin
        * `pharmacy` - Pharmacy
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    VerifyOTP:
      type: object
      properties:
        email:
          type: string
          format: email
        otp:
          type: string
          writeOnly: true
          maxLength: 6
          minLength: 6
      required:
      - email
      - otp
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
